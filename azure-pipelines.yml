trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- script: |
    npm install -g @angular/cli
    npm install
    ng build --prod
    npm run test-ci   
    ls /coverage
    ls     
  displayName: 'npm install, unitTest and build'

- task: SonarCloudPrepare@1
  displayName: 'Prepare analysis on Sonar'
  inputs:
    SonarCloud: 'Connection sonar'
    organization: 'thiago980709'
    scannerMode: 'CLI'
    configMode: 'file'

- task: SonarCloudAnalyze@1
  displayName: 'Anlisis de código estático'

- task: SonarCloudPublish@1
  displayName: 'Quality Gate'
  inputs:
    pollingTimeoutSec: '300'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: 'dist/pet-book'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/pet-book-$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1

- task: S3Upload@1
  inputs:
    awsCredentials: 'Connection aws'
    regionName: 'us-east-1'
    bucketName: 'petbook-amazon'
    sourceFolder: '$(Build.ArtifactStagingDirectory)'
    globExpressions: '*.zip'
    targetFolder: 'petbook-s3'

- task: Docker@2
  inputs:
    containerRegistry: 'Connection docker hub'
    repository: 'camilo9856/pet-book'
    command: 'build'
    Dockerfile: '**/Dockerfile'
    tags: 'petbook_V$(Build.BuildId)'

- task: Docker@2
  inputs:
    containerRegistry: 'Connection docker hub'
    repository: 'camilo9856/pet-book'
    command: 'push'
    tags: 'petbook_V$(Build.BuildId)'